[workspace]
members = ["cargo:."]

# Config for 'dist'
[dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.28.0"
# CI backends to support
ci = "github"
# Whether to enable GitHub Attestations
github-attestations = true
# Set up code to run before building our artifacts.
github-build-setup = "release-prebuild.yml"
# The installers to generate for each app
installers = ["shell", "powershell", "homebrew"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "aarch64-pc-windows-msvc", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = true
# A GitHub repo to push Homebrew formulas to
tap = "wack/homebrew-tap"
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
pr-run-mode = "upload"

# Override the default runner image. Ubuntu-20.04 builds
# with too old of a C compiler, and breaks some cryptography
# packages due to open bugs.
[dist.github-custom-runners]
x86_64-unknown-linux-gnu = "ubuntu-22.04"
aarch64-unknown-linux-gnu = "ubuntu-22.04"
# Also failing, but maybe unrelated?
# x86_64-pc-windows-msvc = "ubuntu-22.04"

# aarch64-apple-darwin = "ubuntu-22.04"
# aarch64-pc-windows-msvc = "ubuntu-22.04"
# x86_64-apple-darwin = "ubuntu-22.04"


